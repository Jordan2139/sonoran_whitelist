"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.CacheManager = void 0;
const collection_1 = __importDefault(require("@discordjs/collection"));
const DataManager_1 = require("./DataManager");
class CacheManager extends DataManager_1.DataManager {
    constructor(instance, holds, iterable) {
        super(instance, holds);
        this._cache = new collection_1.default();
        if (iterable) {
            for (const item of iterable) {
                this._add(item);
            }
        }
    }
    get cache() {
        return this._cache;
    }
    _add(data, cache = true, id) {
        const existing = this.cache.get(id !== null && id !== void 0 ? id : data.id);
        if (existing) {
            if (cache) {
                existing._patch(data);
                return existing;
            }
            const clone = existing._clone();
            clone._patch(data);
            return clone;
        }
        const entry = data;
        if (cache)
            this.cache.set(id !== null && id !== void 0 ? id : entry.id, entry);
        return entry;
    }
}
exports.CacheManager = CacheManager;
